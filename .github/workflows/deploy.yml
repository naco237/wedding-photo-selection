name: Deploy to O2switch Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build React application
        run: npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Deploy React build to O2switch
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: /public_html/tri-photos/wp-content/plugins/wedding-photo-selection/app/

      - name: Deploy WordPress plugin to O2switch
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./wordpress-plugin/
          server-dir: /public_html/tri-photos/wp-content/plugins/wedding-photo-selection/
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            README.md

      - name: Verify deployment
        run: |
          echo " Deployment completed!"
          echo "Frontend deployed to: /public_html/tri-photos/wp-content/plugins/wedding-photo-selection/app/"
          echo "WordPress plugin deployed to: /public_html/tri-photos/wp-content/plugins/wedding-photo-selection/"

      - name: Create deployment status
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const { status, conclusion } = context.job
            const message = status === 'success' 
              ? ' Déploiement réussi sur O2switch'
              : ' Échec du déploiement'
            
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment ? context.payload.deployment.id : null,
              state: conclusion === 'success' ? 'success' : 'failure',
              description: message
            })
